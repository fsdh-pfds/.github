name: Deploy Repository Settings

on:
  schedule:
    - cron: "0 * * * *"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/manage-org-repo-settings.yaml"
      - "repo-settings/*.json"
  workflow_dispatch:

permissions: read-all

jobs:
  deploy_settings:
    runs-on: ubuntu-latest
    steps:
      - name: Create App token
        id: create_token
        uses: fsdh-pfds/.github/.github/actions/create-app-token@main
        with:
          app-id: ${{ vars.FSDH_REPO_ADMIN_APP_ID }}
          private-key: ${{ secrets.FSDH_REPO_ADMIN_APP_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ steps.create_token.outputs.token }}"

      - name: Create or update repositories configuration
        run: |
          set -euo pipefail
          error_count=0

          org="${{ github.repository_owner }}"

          for file in repo-settings/*.json; do
            echo "Processing $file..."
            repo_name=$(jq -r '.name' "$file")

            if [ -z "$repo_name" ]; then
              echo "Missing 'name' in $file; skipping."
              continue
            fi

            # Check repository existence
            if gh api "repos/${org}/${repo_name}" --silent >/dev/null 2>&1; then
              repo_exists=true
            else
              repo_exists=false
            fi

            # Perform create or update
            if [ "$repo_exists" = true ]; then
              echo "Repository $org/$repo_name exists — updating settings..."
              if gh api --method PATCH "repos/${org}/${repo_name}" \
                --header "Content-Type: application/json" \
                --input "$file" --silent; then
                echo "Updated repository settings for $org/$repo_name"
              else
                echo "Failed to update settings for $org/$repo_name"
                error_count=$((error_count+1))
              fi
            else
              echo "Repository $org/$repo_name does not exist — creating..."
              if gh api --method POST "orgs/${org}/repos" \
                --header "Content-Type: application/json" \
                --input "$file" --silent; then
                echo "Created repository $org/$repo_name"
              else
                echo "Failed to create repository $org/$repo_name"
                error_count=$((error_count+1))
              fi
            fi
          done

          if [ $error_count -gt 0 ]; then
            echo "$error_count errors encountered while processing repositories."
            exit 1
          else
            echo "All repositories processed successfully."
          fi
