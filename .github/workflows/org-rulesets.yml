name: Configure Branch Protection Rulesets (Management Repo)

on:
  push:
    # Run if any .json file is modified or created/removed:
    paths:
      - ".github/workflows/branch-rulesets/**/*.json"
      - ".github/workflows/org-rulesets.yml"
  schedule:
    - cron: "0 6 * * *" # Run at 6 AM daily
  workflow_dispatch:

permissions: read-all

jobs:
  configure_rulesets_across_repos:
    runs-on: ubuntu-latest

    steps:
      - name: Convert App token (GitHub App with repo admin perms)
        id: create_token
        uses: getsentry/action-github-app-token@v3.0.0
        with:
          app_id: ${{ vars.FSDH_REPO_ADMIN_APP_ID }}
          private_key: ${{ secrets.FSDH_REPO_ADMIN_APP_KEY }}

      - name: Checkout management repo
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        run: |
          echo "[Stage] Setting up GitHub CLI"
          gh auth login --with-token <<< "${{ steps.create_token.outputs.token }}"

      - name: List and configure rulesets
        env:
          GH_TOKEN: ${{ steps.create_token.outputs.token }}
        run: |

          echo "[Stage] Fetching repositories in the organization"
          repos=$(gh api "orgs/${{ github.repository_owner }}/repos" --paginate --jq '.[].full_name')
          echo "Repositories found:"
          echo "$repos"


          echo "[Stage] Listing rulesets across repositories."

          for repo_dir in .github/workflows/branch-rulesets/*; do
            if [ -d "$repo_dir" ]; then
              repo_name="$(basename "$repo_dir")"
              echo "\n=== [Processing Repository] $repo_name ==="

              # Collect and display ruleset names from local JSON files
              echo "[Info] Collecting local rulesets for $repo_name."
              local_ruleset_files=("$repo_dir"/*.json)
              if [ "${#local_ruleset_files[@]}" -eq 0 ]; then
                echo "[Warning] No ruleset files found for $repo_name. Skipping."
                continue
              fi

              echo "[Info] Local ruleset files:" 
              for ruleset_file in "${local_ruleset_files[@]}"; do
                ruleset_name="$(basename "$ruleset_file" .json)"
                echo "  - $ruleset_name (from $ruleset_file)"
              done

              # Fetch and display existing rulesets from GitHub
              echo "[Info] Fetching existing rulesets from GitHub for $repo_name."
              existing_ruleset_names="$(gh api "repos/${{ github.repository_owner }}/$repo_name/rulesets" --jq '.[].name' 2>/dev/null || true)"
              if [ -n "$existing_ruleset_names" ]; then
                echo "[Info] Existing rulesets in $repo_name:"
                echo "$existing_ruleset_names" | while read -r ruleset; do
                  echo "  - $ruleset"
                done
              else
                echo "[Info] No existing rulesets found for $repo_name."
              fi

              echo "[Complete] Finished processing $repo_name."
            fi
          done

          echo "[Complete] Ruleset listing process completed for all repositories."
