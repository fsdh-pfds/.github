name: Check Member Activity

on:
  schedule:
    - cron: "0 0 * * *" # Runs daily at midnight UTC
  workflow_dispatch:
  push: {}

jobs:
  check-activity:
    runs-on: ubuntu-latest

    steps:
      - name: Create App token
        id: create_token
        uses: fsdh-pfds/.github/.github/actions/create-app-token@main
        with:
          app-id: ${{ vars.FSDH_ORG_EVENT_WATCHER_APP_ID }}
          private-key: ${{ secrets.FSDH_ORG_EVENT_WATCHER_APP_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        run: |
          gh auth login --with-token <<< "${{ steps.create_token.outputs.token }}"

      - name: Check Members Activity
        run: |
          echo "Starting member activity check..."

          # Calculate the date 90 days ago (YYYY-MM-DD format)
          SINCE=$(date -d "90 days ago" +%Y-%m-%d)
          echo "Filtering for events on or after: $SINCE"

          # Prepare the output file for reporting
          OUTPUT_FILE="activity_report.txt"
          echo "Activity Report for Organization Members:" > "$OUTPUT_FILE"

          MEMBERS_FILE="org-membership/members.json"
          if [ ! -f "$MEMBERS_FILE" ]; then
            echo "Error: $MEMBERS_FILE not found."
            exit 1
          fi

          # Iterate over each member in the JSON file
          while IFS= read -r member; do
            username=$(echo "$member" | jq -r '.username')
            echo "Checking activity for $username"

            # Fetch events and select the FIRST matching event only
            latest_event=$(gh api /users/"$username"/events?per_page=100 \
              --paginate --jq '[.[] | select(.created_at >= env.SINCE and (.org.login == "fsdh-pfds"))] | sort_by(.created_at) | reverse | .[0]' || echo "")

            if [ -z "$latest_event" ] || [ "$latest_event" = "null" ]; then
              echo "User $username is stale" | tee -a "$OUTPUT_FILE"
            else
              # Extract details from the single latest event
              event_type=$(echo "$latest_event" | jq -r '.type')
              event_date=$(echo "$latest_event" | jq -r '.created_at')
              echo "User $username is active: Last event ($event_type) at: $event_date" | tee -a "$OUTPUT_FILE"
            fi
          done < <(jq -c '.members[]' "$MEMBERS_FILE")

          echo "Activity check complete. Final findings:"
          cat "$OUTPUT_FILE"
